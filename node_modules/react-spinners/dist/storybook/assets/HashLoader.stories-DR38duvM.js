import{j as $}from"./jsx-runtime-QvZ8i92b.js";import{c as V}from"./colors-DV-zfxfh.js";import{p as j,a as o,c}from"./animation-CmKoZPRv.js";import"./index-uubelm5h.js";function l({loading:x=!0,color:t="#000000",speedMultiplier:b=1,cssOverride:y={},size:n=50,...g}){const{value:p,unit:d}=j(n),w={display:"inherit",position:"relative",width:o(n),height:o(n),transform:"rotate(165deg)",...y},r=p/5,a=(p-r)/2,e=a-r,s=V(t,.75),_=c("HashLoader",`0% {width: ${r}px; box-shadow: ${a}px ${-e}px ${s}, ${-a}px ${e}px ${s}}
    35% {width: ${o(n)}; box-shadow: 0 ${-e}px ${s}, 0 ${e}px ${s}}
    70% {width: ${r}px; box-shadow: ${-a}px ${-e}px ${s}, ${a}px ${e}px ${s}}
    100% {box-shadow: ${a}px ${-e}px ${s}, ${-a}px ${e}px ${s}}`,"before"),v=c("HashLoader",`0% {height: ${r}px; box-shadow: ${e}px ${a}px ${t}, ${-e}px ${-a}px ${t}}
    35% {height: ${o(n)}; box-shadow: ${e}px 0 ${t}, ${-e}px 0 ${t}}
    70% {height: ${r}px; box-shadow: ${e}px ${-a}px ${t}, ${-e}px ${a}px ${t}}
    100% {box-shadow: ${e}px ${a}px ${t}, ${-e}px ${-a}px ${t}}`,"after"),u=L=>({position:"absolute",top:"50%",left:"50%",display:"block",width:`${p/5}${d}`,height:`${p/5}${d}`,borderRadius:`${p/10}${d}`,transform:"translate(-50%, -50%)",animationFillMode:"none",animation:`${L===1?_:v} ${2/b}s infinite`});return x?$.jsxs("span",{style:w,...g,children:[$.jsx("span",{style:u(1)}),$.jsx("span",{style:u(2)})]}):null}try{l.displayName="HashLoader",l.__docgenInfo={description:"",displayName:"HashLoader",props:{size:{defaultValue:{value:"50"},description:"",name:"size",required:!1,type:{name:"LengthType"}},color:{defaultValue:{value:"#000000"},description:"",name:"color",required:!1,type:{name:"string"}},loading:{defaultValue:{value:"true"},description:"",name:"loading",required:!1,type:{name:"boolean"}},cssOverride:{defaultValue:{value:"{}"},description:"",name:"cssOverride",required:!1,type:{name:"CSSProperties"}},speedMultiplier:{defaultValue:{value:"1"},description:"",name:"speedMultiplier",required:!1,type:{name:"number"}}}}}catch{}const P={component:l,argTypes:{size:{description:"Can be number or string. When number, unit is assumed as px. When string, a unit is expected to be passed in",control:{type:"number"}}}},i={};var m,h,f;i.parameters={...i.parameters,docs:{...(m=i.parameters)==null?void 0:m.docs,source:{originalSource:"{}",...(f=(h=i.parameters)==null?void 0:h.docs)==null?void 0:f.source}}};const R=["Primary"];export{i as Primary,R as __namedExportsOrder,P as default};
