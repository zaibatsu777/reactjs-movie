import{j as e}from"./jsx-runtime-QvZ8i92b.js";import{c as _,p as c,a as p}from"./animation-CmKoZPRv.js";import"./index-uubelm5h.js";const $=_("GridLoader","0% {transform: scale(1)} 50% {transform: scale(0.5); opacity: 0.7} 100% {transform: scale(1); opacity: 1}","grid"),s=a=>Math.random()*a;function l({loading:a=!0,color:f="#000000",speedMultiplier:b=1,cssOverride:h={},size:i=15,margin:d=2,...x}){const o=c(i),j=c(d),u=parseFloat(o.value.toString())*3+parseFloat(j.value.toString())*6,v={width:`${u}${o.unit}`,fontSize:0,display:"inline-block",...h},r=t=>({display:"inline-block",backgroundColor:f,width:`${p(i)}`,height:`${p(i)}`,margin:p(d),borderRadius:"100%",animationFillMode:"both",animation:`${$} ${(t/100+.6)/b}s ${t/100-.2}s infinite ease`});return a?e.jsxs("span",{style:v,...x,ref:t=>{t&&t.style.setProperty("width",`${u}${o.unit}`,"important")},children:[e.jsx("span",{style:r(s(100))}),e.jsx("span",{style:r(s(100))}),e.jsx("span",{style:r(s(100))}),e.jsx("span",{style:r(s(100))}),e.jsx("span",{style:r(s(100))}),e.jsx("span",{style:r(s(100))}),e.jsx("span",{style:r(s(100))}),e.jsx("span",{style:r(s(100))}),e.jsx("span",{style:r(s(100))})]}):null}try{l.displayName="GridLoader",l.__docgenInfo={description:"",displayName:"GridLoader",props:{size:{defaultValue:{value:"15"},description:"",name:"size",required:!1,type:{name:"LengthType"}},margin:{defaultValue:{value:"2"},description:"",name:"margin",required:!1,type:{name:"LengthType"}},color:{defaultValue:{value:"#000000"},description:"",name:"color",required:!1,type:{name:"string"}},loading:{defaultValue:{value:"true"},description:"",name:"loading",required:!1,type:{name:"boolean"}},cssOverride:{defaultValue:{value:"{}"},description:"",name:"cssOverride",required:!1,type:{name:"CSSProperties"}},speedMultiplier:{defaultValue:{value:"1"},description:"",name:"speedMultiplier",required:!1,type:{name:"number"}}}}}catch{}const q={component:l,argTypes:{size:{description:"Can be number or string. When number, unit is assumed as px. When string, a unit is expected to be passed in",control:{type:"number"}},width:{description:"Can be number or string. When number, unit is assumed as px. When string, a unit is expected to be passed in",control:{type:"number"}},margin:{description:"Can be number or string. When number, unit is assumed as px. When string, a unit is expected to be passed in",control:{type:"number"}}}},n={};var m,y,g;n.parameters={...n.parameters,docs:{...(m=n.parameters)==null?void 0:m.docs,source:{originalSource:"{}",...(g=(y=n.parameters)==null?void 0:y.docs)==null?void 0:g.source}}};const w=["Primary"];export{n as Primary,w as __namedExportsOrder,q as default};
