import{j as a}from"./jsx-runtime-QvZ8i92b.js";import{c as m,a as t}from"./animation-CmKoZPRv.js";import{c as y}from"./colors-DV-zfxfh.js";import"./index-uubelm5h.js";const x=m("BarLoader","0% {left: -35%;right: 100%} 60% {left: 100%;right: -90%} 100% {left: 100%;right: -90%}","long"),v=m("BarLoader","0% {left: -200%;right: 100%} 60% {left: 107%;right: -8%} 100% {left: 107%;right: -8%}","short");function i({loading:n=!0,color:s="#000000",speedMultiplier:o=1,cssOverride:g={},height:d=4,width:h=100,...f}){const b={display:"inherit",position:"relative",width:t(h),height:t(d),overflow:"hidden",backgroundColor:y(s,.2),backgroundClip:"padding-box",...g},l=r=>({position:"absolute",height:t(d),overflow:"hidden",backgroundColor:s,backgroundClip:"padding-box",display:"block",borderRadius:2,willChange:"left, right",animationFillMode:"forwards",animation:`${r===1?x:v} ${2.1/o}s ${r===2?`${1.15/o}s`:""} ${r===1?"cubic-bezier(0.65, 0.815, 0.735, 0.395)":"cubic-bezier(0.165, 0.84, 0.44, 1)"} infinite`});return n?a.jsxs("span",{style:b,...f,children:[a.jsx("span",{style:l(1)}),a.jsx("span",{style:l(2)})]}):null}try{i.displayName="BarLoader",i.__docgenInfo={description:"",displayName:"BarLoader",props:{height:{defaultValue:{value:"4"},description:"",name:"height",required:!1,type:{name:"LengthType"}},width:{defaultValue:{value:"100"},description:"",name:"width",required:!1,type:{name:"LengthType"}},color:{defaultValue:{value:"#000000"},description:"",name:"color",required:!1,type:{name:"string"}},loading:{defaultValue:{value:"true"},description:"",name:"loading",required:!1,type:{name:"boolean"}},cssOverride:{defaultValue:{value:"{}"},description:"",name:"cssOverride",required:!1,type:{name:"CSSProperties"}},speedMultiplier:{defaultValue:{value:"1"},description:"",name:"speedMultiplier",required:!1,type:{name:"number"}}}}}catch{}const V={component:i,argTypes:{height:{description:"Can be number or string. When number, unit is assumed as px. When string, a unit is expected to be passed in",control:{type:"number"}},width:{description:"Can be number or string. When number, unit is assumed as px. When string, a unit is expected to be passed in",control:{type:"number"}}}},e={};var p,u,c;e.parameters={...e.parameters,docs:{...(p=e.parameters)==null?void 0:p.docs,source:{originalSource:"{}",...(c=(u=e.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};const q=["Primary"];export{e as Primary,q as __namedExportsOrder,V as default};
